utils = require 'utils'
g = require './../global'

links =
  showAll: (req, res) ->
    links = g.storage.data.links.all()
    res.render 'links', {title: 'Links', links: links}
  edit: (req, res) ->
    if req.body.titles.length isnt req.body.targets.length
      return res.error 'Please specify the same amounts of titles and headers!'

    # adding new links
    if not utils.empty(req.body.newTitle) and not utils.empty(req.body.newTarget)
      req.body.titles.push req.body.newTitle
      req.body.targets.push req.body.newTarget
    titles = req.body.titles
    targets = req.body.targets

    # at least one link has to remain
    if utils.elInOb(titles, 'remove') is utils.noe titles
      return res.error 'Please specify at least one link!'

    # new link object to replace the current links in the db
    links = {}
    for title, i in titles when title isnt 'remove'
      # link id
      links[i + 1] =
        title: title
        target: targets[i]

    g.storage.data.links.clear()
    g.storage.data.new 'links'

    # storing the links in the database
    for id of links
      g.storage.data.links[id] = links[id]

    res.info 'The navigation data has been updated!'

module.exports = links